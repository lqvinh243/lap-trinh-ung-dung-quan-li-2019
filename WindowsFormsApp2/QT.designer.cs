#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApp2
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LTUDQL")]
	public partial class QTDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCauHoi(CauHoi instance);
    partial void UpdateCauHoi(CauHoi instance);
    partial void DeleteCauHoi(CauHoi instance);
    partial void InsertQuanTri(QuanTri instance);
    partial void UpdateQuanTri(QuanTri instance);
    partial void DeleteQuanTri(QuanTri instance);
    partial void InsertCT_CauHoi(CT_CauHoi instance);
    partial void UpdateCT_CauHoi(CT_CauHoi instance);
    partial void DeleteCT_CauHoi(CT_CauHoi instance);
    partial void InsertCT_KetQua(CT_KetQua instance);
    partial void UpdateCT_KetQua(CT_KetQua instance);
    partial void DeleteCT_KetQua(CT_KetQua instance);
    partial void InsertCT_KyThi(CT_KyThi instance);
    partial void UpdateCT_KyThi(CT_KyThi instance);
    partial void DeleteCT_KyThi(CT_KyThi instance);
    partial void InsertCT_MaDe(CT_MaDe instance);
    partial void UpdateCT_MaDe(CT_MaDe instance);
    partial void DeleteCT_MaDe(CT_MaDe instance);
    partial void InsertCT_OnLuyen(CT_OnLuyen instance);
    partial void UpdateCT_OnLuyen(CT_OnLuyen instance);
    partial void DeleteCT_OnLuyen(CT_OnLuyen instance);
    partial void InsertCT_ThamGia(CT_ThamGia instance);
    partial void UpdateCT_ThamGia(CT_ThamGia instance);
    partial void DeleteCT_ThamGia(CT_ThamGia instance);
    partial void InsertGiaoVien(GiaoVien instance);
    partial void UpdateGiaoVien(GiaoVien instance);
    partial void DeleteGiaoVien(GiaoVien instance);
    partial void InsertHocSinh(HocSinh instance);
    partial void UpdateHocSinh(HocSinh instance);
    partial void DeleteHocSinh(HocSinh instance);
    partial void InsertKyThi(KyThi instance);
    partial void UpdateKyThi(KyThi instance);
    partial void DeleteKyThi(KyThi instance);
    partial void InsertMaDe(MaDe instance);
    partial void UpdateMaDe(MaDe instance);
    partial void DeleteMaDe(MaDe instance);
    partial void InsertNguoiDung(NguoiDung instance);
    partial void UpdateNguoiDung(NguoiDung instance);
    partial void DeleteNguoiDung(NguoiDung instance);
    partial void InsertOnLuyen(OnLuyen instance);
    partial void UpdateOnLuyen(OnLuyen instance);
    partial void DeleteOnLuyen(OnLuyen instance);
    #endregion
		
		public QTDataContext() : 
				base(global::WindowsFormsApp2.Properties.Settings.Default.LTUDQLConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QTDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QTDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QTDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QTDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CauHoi> CauHois
		{
			get
			{
				return this.GetTable<CauHoi>();
			}
		}
		
		public System.Data.Linq.Table<QuanTri> QuanTris
		{
			get
			{
				return this.GetTable<QuanTri>();
			}
		}
		
		public System.Data.Linq.Table<CT_CauHoi> CT_CauHois
		{
			get
			{
				return this.GetTable<CT_CauHoi>();
			}
		}
		
		public System.Data.Linq.Table<CT_KetQua> CT_KetQuas
		{
			get
			{
				return this.GetTable<CT_KetQua>();
			}
		}
		
		public System.Data.Linq.Table<CT_KyThi> CT_KyThis
		{
			get
			{
				return this.GetTable<CT_KyThi>();
			}
		}
		
		public System.Data.Linq.Table<CT_MaDe> CT_MaDes
		{
			get
			{
				return this.GetTable<CT_MaDe>();
			}
		}
		
		public System.Data.Linq.Table<CT_OnLuyen> CT_OnLuyens
		{
			get
			{
				return this.GetTable<CT_OnLuyen>();
			}
		}
		
		public System.Data.Linq.Table<CT_ThamGia> CT_ThamGias
		{
			get
			{
				return this.GetTable<CT_ThamGia>();
			}
		}
		
		public System.Data.Linq.Table<GiaoVien> GiaoViens
		{
			get
			{
				return this.GetTable<GiaoVien>();
			}
		}
		
		public System.Data.Linq.Table<HocSinh> HocSinhs
		{
			get
			{
				return this.GetTable<HocSinh>();
			}
		}
		
		public System.Data.Linq.Table<KyThi> KyThis
		{
			get
			{
				return this.GetTable<KyThi>();
			}
		}
		
		public System.Data.Linq.Table<MaDe> MaDes
		{
			get
			{
				return this.GetTable<MaDe>();
			}
		}
		
		public System.Data.Linq.Table<NguoiDung> NguoiDungs
		{
			get
			{
				return this.GetTable<NguoiDung>();
			}
		}
		
		public System.Data.Linq.Table<OnLuyen> OnLuyens
		{
			get
			{
				return this.GetTable<OnLuyen>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CauHoi")]
	public partial class CauHoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Khoi;
		
		private string _Mota;
		
		private bool _Duyet;
		
		private int _IDNguoitao;
		
		private System.Nullable<int> _Dokho;
		
		private EntitySet<CT_CauHoi> _CT_CauHois;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnKhoiChanging(int value);
    partial void OnKhoiChanged();
    partial void OnMotaChanging(string value);
    partial void OnMotaChanged();
    partial void OnDuyetChanging(bool value);
    partial void OnDuyetChanged();
    partial void OnIDNguoitaoChanging(int value);
    partial void OnIDNguoitaoChanged();
    partial void OnDokhoChanging(System.Nullable<int> value);
    partial void OnDokhoChanged();
    #endregion
		
		public CauHoi()
		{
			this._CT_CauHois = new EntitySet<CT_CauHoi>(new Action<CT_CauHoi>(this.attach_CT_CauHois), new Action<CT_CauHoi>(this.detach_CT_CauHois));
			this._NguoiDung = default(EntityRef<NguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Khoi
		{
			get
			{
				return this._Khoi;
			}
			set
			{
				if ((this._Khoi != value))
				{
					this.OnKhoiChanging(value);
					this.SendPropertyChanging();
					this._Khoi = value;
					this.SendPropertyChanged("Khoi");
					this.OnKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mota", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Mota
		{
			get
			{
				return this._Mota;
			}
			set
			{
				if ((this._Mota != value))
				{
					this.OnMotaChanging(value);
					this.SendPropertyChanging();
					this._Mota = value;
					this.SendPropertyChanged("Mota");
					this.OnMotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duyet", DbType="Bit NOT NULL")]
		public bool Duyet
		{
			get
			{
				return this._Duyet;
			}
			set
			{
				if ((this._Duyet != value))
				{
					this.OnDuyetChanging(value);
					this.SendPropertyChanging();
					this._Duyet = value;
					this.SendPropertyChanged("Duyet");
					this.OnDuyetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNguoitao", DbType="Int NOT NULL")]
		public int IDNguoitao
		{
			get
			{
				return this._IDNguoitao;
			}
			set
			{
				if ((this._IDNguoitao != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDNguoitaoChanging(value);
					this.SendPropertyChanging();
					this._IDNguoitao = value;
					this.SendPropertyChanged("IDNguoitao");
					this.OnIDNguoitaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dokho", DbType="Int")]
		public System.Nullable<int> Dokho
		{
			get
			{
				return this._Dokho;
			}
			set
			{
				if ((this._Dokho != value))
				{
					this.OnDokhoChanging(value);
					this.SendPropertyChanging();
					this._Dokho = value;
					this.SendPropertyChanged("Dokho");
					this.OnDokhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHoi_CT_CauHoi", Storage="_CT_CauHois", ThisKey="ID,Khoi", OtherKey="IDCauhoi,Khoi")]
		public EntitySet<CT_CauHoi> CT_CauHois
		{
			get
			{
				return this._CT_CauHois;
			}
			set
			{
				this._CT_CauHois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_CauHoi", Storage="_NguoiDung", ThisKey="IDNguoitao", OtherKey="ID", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.CauHois.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.CauHois.Add(this);
						this._IDNguoitao = value.ID;
					}
					else
					{
						this._IDNguoitao = default(int);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_CauHois(CT_CauHoi entity)
		{
			this.SendPropertyChanging();
			entity.CauHoi = this;
		}
		
		private void detach_CT_CauHois(CT_CauHoi entity)
		{
			this.SendPropertyChanging();
			entity.CauHoi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuanTri")]
	public partial class QuanTri : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Hoten;
		
		private System.Nullable<System.DateTime> _Ngaysinh;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnHotenChanging(string value);
    partial void OnHotenChanged();
    partial void OnNgaysinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaysinhChanged();
    #endregion
		
		public QuanTri()
		{
			this._NguoiDung = default(EntityRef<NguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hoten", DbType="NVarChar(50)")]
		public string Hoten
		{
			get
			{
				return this._Hoten;
			}
			set
			{
				if ((this._Hoten != value))
				{
					this.OnHotenChanging(value);
					this.SendPropertyChanging();
					this._Hoten = value;
					this.SendPropertyChanged("Hoten");
					this.OnHotenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaysinh", DbType="Date")]
		public System.Nullable<System.DateTime> Ngaysinh
		{
			get
			{
				return this._Ngaysinh;
			}
			set
			{
				if ((this._Ngaysinh != value))
				{
					this.OnNgaysinhChanging(value);
					this.SendPropertyChanging();
					this._Ngaysinh = value;
					this.SendPropertyChanged("Ngaysinh");
					this.OnNgaysinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_QuanTri", Storage="_NguoiDung", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.QuanTri = null;
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.QuanTri = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_CauHoi")]
	public partial class CT_CauHoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDCauhoi;
		
		private int _Khoi;
		
		private string _IDdapan;
		
		private string _Mota;
		
		private bool _Dung;
		
		private EntitySet<CT_KetQua> _CT_KetQuas;
		
		private EntitySet<CT_MaDe> _CT_MaDes;
		
		private EntitySet<CT_OnLuyen> _CT_OnLuyens;
		
		private EntityRef<CauHoi> _CauHoi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCauhoiChanging(int value);
    partial void OnIDCauhoiChanged();
    partial void OnKhoiChanging(int value);
    partial void OnKhoiChanged();
    partial void OnIDdapanChanging(string value);
    partial void OnIDdapanChanged();
    partial void OnMotaChanging(string value);
    partial void OnMotaChanged();
    partial void OnDungChanging(bool value);
    partial void OnDungChanged();
    #endregion
		
		public CT_CauHoi()
		{
			this._CT_KetQuas = new EntitySet<CT_KetQua>(new Action<CT_KetQua>(this.attach_CT_KetQuas), new Action<CT_KetQua>(this.detach_CT_KetQuas));
			this._CT_MaDes = new EntitySet<CT_MaDe>(new Action<CT_MaDe>(this.attach_CT_MaDes), new Action<CT_MaDe>(this.detach_CT_MaDes));
			this._CT_OnLuyens = new EntitySet<CT_OnLuyen>(new Action<CT_OnLuyen>(this.attach_CT_OnLuyens), new Action<CT_OnLuyen>(this.detach_CT_OnLuyens));
			this._CauHoi = default(EntityRef<CauHoi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCauhoi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDCauhoi
		{
			get
			{
				return this._IDCauhoi;
			}
			set
			{
				if ((this._IDCauhoi != value))
				{
					if (this._CauHoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCauhoiChanging(value);
					this.SendPropertyChanging();
					this._IDCauhoi = value;
					this.SendPropertyChanged("IDCauhoi");
					this.OnIDCauhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Khoi
		{
			get
			{
				return this._Khoi;
			}
			set
			{
				if ((this._Khoi != value))
				{
					if (this._CauHoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhoiChanging(value);
					this.SendPropertyChanging();
					this._Khoi = value;
					this.SendPropertyChanged("Khoi");
					this.OnKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDdapan", DbType="NChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDdapan
		{
			get
			{
				return this._IDdapan;
			}
			set
			{
				if ((this._IDdapan != value))
				{
					this.OnIDdapanChanging(value);
					this.SendPropertyChanging();
					this._IDdapan = value;
					this.SendPropertyChanged("IDdapan");
					this.OnIDdapanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mota", DbType="NVarChar(255)")]
		public string Mota
		{
			get
			{
				return this._Mota;
			}
			set
			{
				if ((this._Mota != value))
				{
					this.OnMotaChanging(value);
					this.SendPropertyChanging();
					this._Mota = value;
					this.SendPropertyChanged("Mota");
					this.OnMotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dung", DbType="Bit NOT NULL")]
		public bool Dung
		{
			get
			{
				return this._Dung;
			}
			set
			{
				if ((this._Dung != value))
				{
					this.OnDungChanging(value);
					this.SendPropertyChanging();
					this._Dung = value;
					this.SendPropertyChanged("Dung");
					this.OnDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CT_CauHoi_CT_KetQua", Storage="_CT_KetQuas", ThisKey="IDCauhoi,Khoi,IDdapan", OtherKey="IDCauhoi,Khoicauhoi,IDDapan")]
		public EntitySet<CT_KetQua> CT_KetQuas
		{
			get
			{
				return this._CT_KetQuas;
			}
			set
			{
				this._CT_KetQuas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CT_CauHoi_CT_MaDe", Storage="_CT_MaDes", ThisKey="IDCauhoi,Khoi,IDdapan", OtherKey="IDCauhoi,Khoicauhoi,IDDapan")]
		public EntitySet<CT_MaDe> CT_MaDes
		{
			get
			{
				return this._CT_MaDes;
			}
			set
			{
				this._CT_MaDes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CT_CauHoi_CT_OnLuyen", Storage="_CT_OnLuyens", ThisKey="IDCauhoi,Khoi,IDdapan", OtherKey="IDCauhoi,IDKhoicauhoi,IDDapan")]
		public EntitySet<CT_OnLuyen> CT_OnLuyens
		{
			get
			{
				return this._CT_OnLuyens;
			}
			set
			{
				this._CT_OnLuyens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHoi_CT_CauHoi", Storage="_CauHoi", ThisKey="IDCauhoi,Khoi", OtherKey="ID,Khoi", IsForeignKey=true)]
		public CauHoi CauHoi
		{
			get
			{
				return this._CauHoi.Entity;
			}
			set
			{
				CauHoi previousValue = this._CauHoi.Entity;
				if (((previousValue != value) 
							|| (this._CauHoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauHoi.Entity = null;
						previousValue.CT_CauHois.Remove(this);
					}
					this._CauHoi.Entity = value;
					if ((value != null))
					{
						value.CT_CauHois.Add(this);
						this._IDCauhoi = value.ID;
						this._Khoi = value.Khoi;
					}
					else
					{
						this._IDCauhoi = default(int);
						this._Khoi = default(int);
					}
					this.SendPropertyChanged("CauHoi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_KetQuas(CT_KetQua entity)
		{
			this.SendPropertyChanging();
			entity.CT_CauHoi = this;
		}
		
		private void detach_CT_KetQuas(CT_KetQua entity)
		{
			this.SendPropertyChanging();
			entity.CT_CauHoi = null;
		}
		
		private void attach_CT_MaDes(CT_MaDe entity)
		{
			this.SendPropertyChanging();
			entity.CT_CauHoi = this;
		}
		
		private void detach_CT_MaDes(CT_MaDe entity)
		{
			this.SendPropertyChanging();
			entity.CT_CauHoi = null;
		}
		
		private void attach_CT_OnLuyens(CT_OnLuyen entity)
		{
			this.SendPropertyChanging();
			entity.CT_CauHoi = this;
		}
		
		private void detach_CT_OnLuyens(CT_OnLuyen entity)
		{
			this.SendPropertyChanging();
			entity.CT_CauHoi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_KetQua")]
	public partial class CT_KetQua : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDKythi;
		
		private int _Khoikythi;
		
		private int _IDMade;
		
		private int _Khoidethi;
		
		private int _IDHocsinh;
		
		private int _Lop;
		
		private int _Khoi;
		
		private int _IDCauhoi;
		
		private int _Khoicauhoi;
		
		private string _IDDapan;
		
		private System.Nullable<bool> _Traloi;
		
		private string _Motacauhoi;
		
		private string _Motadapan;
		
		private EntityRef<CT_CauHoi> _CT_CauHoi;
		
		private EntityRef<CT_ThamGia> _CT_ThamGia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDKythiChanging(int value);
    partial void OnIDKythiChanged();
    partial void OnKhoikythiChanging(int value);
    partial void OnKhoikythiChanged();
    partial void OnIDMadeChanging(int value);
    partial void OnIDMadeChanged();
    partial void OnKhoidethiChanging(int value);
    partial void OnKhoidethiChanged();
    partial void OnIDHocsinhChanging(int value);
    partial void OnIDHocsinhChanged();
    partial void OnLopChanging(int value);
    partial void OnLopChanged();
    partial void OnKhoiChanging(int value);
    partial void OnKhoiChanged();
    partial void OnIDCauhoiChanging(int value);
    partial void OnIDCauhoiChanged();
    partial void OnKhoicauhoiChanging(int value);
    partial void OnKhoicauhoiChanged();
    partial void OnIDDapanChanging(string value);
    partial void OnIDDapanChanged();
    partial void OnTraloiChanging(System.Nullable<bool> value);
    partial void OnTraloiChanged();
    partial void OnMotacauhoiChanging(string value);
    partial void OnMotacauhoiChanged();
    partial void OnMotadapanChanging(string value);
    partial void OnMotadapanChanged();
    #endregion
		
		public CT_KetQua()
		{
			this._CT_CauHoi = default(EntityRef<CT_CauHoi>);
			this._CT_ThamGia = default(EntityRef<CT_ThamGia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKythi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDKythi
		{
			get
			{
				return this._IDKythi;
			}
			set
			{
				if ((this._IDKythi != value))
				{
					if (this._CT_ThamGia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKythiChanging(value);
					this.SendPropertyChanging();
					this._IDKythi = value;
					this.SendPropertyChanged("IDKythi");
					this.OnIDKythiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoikythi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Khoikythi
		{
			get
			{
				return this._Khoikythi;
			}
			set
			{
				if ((this._Khoikythi != value))
				{
					if (this._CT_ThamGia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhoikythiChanging(value);
					this.SendPropertyChanging();
					this._Khoikythi = value;
					this.SendPropertyChanged("Khoikythi");
					this.OnKhoikythiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMade", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDMade
		{
			get
			{
				return this._IDMade;
			}
			set
			{
				if ((this._IDMade != value))
				{
					if (this._CT_ThamGia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMadeChanging(value);
					this.SendPropertyChanging();
					this._IDMade = value;
					this.SendPropertyChanged("IDMade");
					this.OnIDMadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoidethi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Khoidethi
		{
			get
			{
				return this._Khoidethi;
			}
			set
			{
				if ((this._Khoidethi != value))
				{
					if (this._CT_ThamGia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhoidethiChanging(value);
					this.SendPropertyChanging();
					this._Khoidethi = value;
					this.SendPropertyChanged("Khoidethi");
					this.OnKhoidethiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHocsinh", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDHocsinh
		{
			get
			{
				return this._IDHocsinh;
			}
			set
			{
				if ((this._IDHocsinh != value))
				{
					if (this._CT_ThamGia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDHocsinhChanging(value);
					this.SendPropertyChanging();
					this._IDHocsinh = value;
					this.SendPropertyChanged("IDHocsinh");
					this.OnIDHocsinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Lop
		{
			get
			{
				return this._Lop;
			}
			set
			{
				if ((this._Lop != value))
				{
					if (this._CT_ThamGia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLopChanging(value);
					this.SendPropertyChanging();
					this._Lop = value;
					this.SendPropertyChanged("Lop");
					this.OnLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Khoi
		{
			get
			{
				return this._Khoi;
			}
			set
			{
				if ((this._Khoi != value))
				{
					if (this._CT_ThamGia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhoiChanging(value);
					this.SendPropertyChanging();
					this._Khoi = value;
					this.SendPropertyChanged("Khoi");
					this.OnKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCauhoi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDCauhoi
		{
			get
			{
				return this._IDCauhoi;
			}
			set
			{
				if ((this._IDCauhoi != value))
				{
					if (this._CT_CauHoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCauhoiChanging(value);
					this.SendPropertyChanging();
					this._IDCauhoi = value;
					this.SendPropertyChanged("IDCauhoi");
					this.OnIDCauhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoicauhoi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Khoicauhoi
		{
			get
			{
				return this._Khoicauhoi;
			}
			set
			{
				if ((this._Khoicauhoi != value))
				{
					if (this._CT_CauHoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhoicauhoiChanging(value);
					this.SendPropertyChanging();
					this._Khoicauhoi = value;
					this.SendPropertyChanged("Khoicauhoi");
					this.OnKhoicauhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDapan", DbType="NChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDDapan
		{
			get
			{
				return this._IDDapan;
			}
			set
			{
				if ((this._IDDapan != value))
				{
					if (this._CT_CauHoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDapanChanging(value);
					this.SendPropertyChanging();
					this._IDDapan = value;
					this.SendPropertyChanged("IDDapan");
					this.OnIDDapanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Traloi", DbType="Bit")]
		public System.Nullable<bool> Traloi
		{
			get
			{
				return this._Traloi;
			}
			set
			{
				if ((this._Traloi != value))
				{
					this.OnTraloiChanging(value);
					this.SendPropertyChanging();
					this._Traloi = value;
					this.SendPropertyChanged("Traloi");
					this.OnTraloiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Motacauhoi", DbType="NVarChar(255)")]
		public string Motacauhoi
		{
			get
			{
				return this._Motacauhoi;
			}
			set
			{
				if ((this._Motacauhoi != value))
				{
					this.OnMotacauhoiChanging(value);
					this.SendPropertyChanging();
					this._Motacauhoi = value;
					this.SendPropertyChanged("Motacauhoi");
					this.OnMotacauhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Motadapan", DbType="NVarChar(255)")]
		public string Motadapan
		{
			get
			{
				return this._Motadapan;
			}
			set
			{
				if ((this._Motadapan != value))
				{
					this.OnMotadapanChanging(value);
					this.SendPropertyChanging();
					this._Motadapan = value;
					this.SendPropertyChanged("Motadapan");
					this.OnMotadapanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CT_CauHoi_CT_KetQua", Storage="_CT_CauHoi", ThisKey="IDCauhoi,Khoicauhoi,IDDapan", OtherKey="IDCauhoi,Khoi,IDdapan", IsForeignKey=true)]
		public CT_CauHoi CT_CauHoi
		{
			get
			{
				return this._CT_CauHoi.Entity;
			}
			set
			{
				CT_CauHoi previousValue = this._CT_CauHoi.Entity;
				if (((previousValue != value) 
							|| (this._CT_CauHoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CT_CauHoi.Entity = null;
						previousValue.CT_KetQuas.Remove(this);
					}
					this._CT_CauHoi.Entity = value;
					if ((value != null))
					{
						value.CT_KetQuas.Add(this);
						this._IDCauhoi = value.IDCauhoi;
						this._Khoicauhoi = value.Khoi;
						this._IDDapan = value.IDdapan;
					}
					else
					{
						this._IDCauhoi = default(int);
						this._Khoicauhoi = default(int);
						this._IDDapan = default(string);
					}
					this.SendPropertyChanged("CT_CauHoi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CT_ThamGia_CT_KetQua", Storage="_CT_ThamGia", ThisKey="IDKythi,Khoikythi,IDMade,Khoidethi,IDHocsinh,Lop,Khoi", OtherKey="IDKythi,Khoikythi,IDMade,Khoidethi,IDHocsinh,Lop,Khoi", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CT_ThamGia CT_ThamGia
		{
			get
			{
				return this._CT_ThamGia.Entity;
			}
			set
			{
				CT_ThamGia previousValue = this._CT_ThamGia.Entity;
				if (((previousValue != value) 
							|| (this._CT_ThamGia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CT_ThamGia.Entity = null;
						previousValue.CT_KetQuas.Remove(this);
					}
					this._CT_ThamGia.Entity = value;
					if ((value != null))
					{
						value.CT_KetQuas.Add(this);
						this._IDKythi = value.IDKythi;
						this._Khoikythi = value.Khoikythi;
						this._IDMade = value.IDMade;
						this._Khoidethi = value.Khoidethi;
						this._IDHocsinh = value.IDHocsinh;
						this._Lop = value.Lop;
						this._Khoi = value.Khoi;
					}
					else
					{
						this._IDKythi = default(int);
						this._Khoikythi = default(int);
						this._IDMade = default(int);
						this._Khoidethi = default(int);
						this._IDHocsinh = default(int);
						this._Lop = default(int);
						this._Khoi = default(int);
					}
					this.SendPropertyChanged("CT_ThamGia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_KyThi")]
	public partial class CT_KyThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDKythi;
		
		private int _Khoikythi;
		
		private int _IDMade;
		
		private int _Khoidethi;
		
		private EntitySet<CT_ThamGia> _CT_ThamGias;
		
		private EntityRef<KyThi> _KyThi;
		
		private EntityRef<MaDe> _MaDe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDKythiChanging(int value);
    partial void OnIDKythiChanged();
    partial void OnKhoikythiChanging(int value);
    partial void OnKhoikythiChanged();
    partial void OnIDMadeChanging(int value);
    partial void OnIDMadeChanged();
    partial void OnKhoidethiChanging(int value);
    partial void OnKhoidethiChanged();
    #endregion
		
		public CT_KyThi()
		{
			this._CT_ThamGias = new EntitySet<CT_ThamGia>(new Action<CT_ThamGia>(this.attach_CT_ThamGias), new Action<CT_ThamGia>(this.detach_CT_ThamGias));
			this._KyThi = default(EntityRef<KyThi>);
			this._MaDe = default(EntityRef<MaDe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKythi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDKythi
		{
			get
			{
				return this._IDKythi;
			}
			set
			{
				if ((this._IDKythi != value))
				{
					if (this._KyThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKythiChanging(value);
					this.SendPropertyChanging();
					this._IDKythi = value;
					this.SendPropertyChanged("IDKythi");
					this.OnIDKythiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoikythi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Khoikythi
		{
			get
			{
				return this._Khoikythi;
			}
			set
			{
				if ((this._Khoikythi != value))
				{
					if (this._KyThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhoikythiChanging(value);
					this.SendPropertyChanging();
					this._Khoikythi = value;
					this.SendPropertyChanged("Khoikythi");
					this.OnKhoikythiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMade", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDMade
		{
			get
			{
				return this._IDMade;
			}
			set
			{
				if ((this._IDMade != value))
				{
					if (this._MaDe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMadeChanging(value);
					this.SendPropertyChanging();
					this._IDMade = value;
					this.SendPropertyChanged("IDMade");
					this.OnIDMadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoidethi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Khoidethi
		{
			get
			{
				return this._Khoidethi;
			}
			set
			{
				if ((this._Khoidethi != value))
				{
					if (this._MaDe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhoidethiChanging(value);
					this.SendPropertyChanging();
					this._Khoidethi = value;
					this.SendPropertyChanged("Khoidethi");
					this.OnKhoidethiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CT_KyThi_CT_ThamGia", Storage="_CT_ThamGias", ThisKey="IDKythi,Khoikythi,IDMade,Khoidethi", OtherKey="IDKythi,Khoikythi,IDMade,Khoidethi")]
		public EntitySet<CT_ThamGia> CT_ThamGias
		{
			get
			{
				return this._CT_ThamGias;
			}
			set
			{
				this._CT_ThamGias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KyThi_CT_KyThi", Storage="_KyThi", ThisKey="IDKythi,Khoikythi", OtherKey="ID,Khoi", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public KyThi KyThi
		{
			get
			{
				return this._KyThi.Entity;
			}
			set
			{
				KyThi previousValue = this._KyThi.Entity;
				if (((previousValue != value) 
							|| (this._KyThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KyThi.Entity = null;
						previousValue.CT_KyThis.Remove(this);
					}
					this._KyThi.Entity = value;
					if ((value != null))
					{
						value.CT_KyThis.Add(this);
						this._IDKythi = value.ID;
						this._Khoikythi = value.Khoi;
					}
					else
					{
						this._IDKythi = default(int);
						this._Khoikythi = default(int);
					}
					this.SendPropertyChanged("KyThi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaDe_CT_KyThi", Storage="_MaDe", ThisKey="IDMade,Khoidethi", OtherKey="ID,Khoi", IsForeignKey=true)]
		public MaDe MaDe
		{
			get
			{
				return this._MaDe.Entity;
			}
			set
			{
				MaDe previousValue = this._MaDe.Entity;
				if (((previousValue != value) 
							|| (this._MaDe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MaDe.Entity = null;
						previousValue.CT_KyThis.Remove(this);
					}
					this._MaDe.Entity = value;
					if ((value != null))
					{
						value.CT_KyThis.Add(this);
						this._IDMade = value.ID;
						this._Khoidethi = value.Khoi;
					}
					else
					{
						this._IDMade = default(int);
						this._Khoidethi = default(int);
					}
					this.SendPropertyChanged("MaDe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_ThamGias(CT_ThamGia entity)
		{
			this.SendPropertyChanging();
			entity.CT_KyThi = this;
		}
		
		private void detach_CT_ThamGias(CT_ThamGia entity)
		{
			this.SendPropertyChanging();
			entity.CT_KyThi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_MaDe")]
	public partial class CT_MaDe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDMade;
		
		private int _Khoimade;
		
		private int _IDCauhoi;
		
		private int _Khoicauhoi;
		
		private string _IDDapan;
		
		private EntityRef<CT_CauHoi> _CT_CauHoi;
		
		private EntityRef<MaDe> _MaDe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDMadeChanging(int value);
    partial void OnIDMadeChanged();
    partial void OnKhoimadeChanging(int value);
    partial void OnKhoimadeChanged();
    partial void OnIDCauhoiChanging(int value);
    partial void OnIDCauhoiChanged();
    partial void OnKhoicauhoiChanging(int value);
    partial void OnKhoicauhoiChanged();
    partial void OnIDDapanChanging(string value);
    partial void OnIDDapanChanged();
    #endregion
		
		public CT_MaDe()
		{
			this._CT_CauHoi = default(EntityRef<CT_CauHoi>);
			this._MaDe = default(EntityRef<MaDe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMade", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDMade
		{
			get
			{
				return this._IDMade;
			}
			set
			{
				if ((this._IDMade != value))
				{
					if (this._MaDe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMadeChanging(value);
					this.SendPropertyChanging();
					this._IDMade = value;
					this.SendPropertyChanged("IDMade");
					this.OnIDMadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoimade", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Khoimade
		{
			get
			{
				return this._Khoimade;
			}
			set
			{
				if ((this._Khoimade != value))
				{
					if (this._MaDe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhoimadeChanging(value);
					this.SendPropertyChanging();
					this._Khoimade = value;
					this.SendPropertyChanged("Khoimade");
					this.OnKhoimadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCauhoi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDCauhoi
		{
			get
			{
				return this._IDCauhoi;
			}
			set
			{
				if ((this._IDCauhoi != value))
				{
					if (this._CT_CauHoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCauhoiChanging(value);
					this.SendPropertyChanging();
					this._IDCauhoi = value;
					this.SendPropertyChanged("IDCauhoi");
					this.OnIDCauhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoicauhoi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Khoicauhoi
		{
			get
			{
				return this._Khoicauhoi;
			}
			set
			{
				if ((this._Khoicauhoi != value))
				{
					if (this._CT_CauHoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhoicauhoiChanging(value);
					this.SendPropertyChanging();
					this._Khoicauhoi = value;
					this.SendPropertyChanged("Khoicauhoi");
					this.OnKhoicauhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDapan", DbType="NChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDDapan
		{
			get
			{
				return this._IDDapan;
			}
			set
			{
				if ((this._IDDapan != value))
				{
					if (this._CT_CauHoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDapanChanging(value);
					this.SendPropertyChanging();
					this._IDDapan = value;
					this.SendPropertyChanged("IDDapan");
					this.OnIDDapanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CT_CauHoi_CT_MaDe", Storage="_CT_CauHoi", ThisKey="IDCauhoi,Khoicauhoi,IDDapan", OtherKey="IDCauhoi,Khoi,IDdapan", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CT_CauHoi CT_CauHoi
		{
			get
			{
				return this._CT_CauHoi.Entity;
			}
			set
			{
				CT_CauHoi previousValue = this._CT_CauHoi.Entity;
				if (((previousValue != value) 
							|| (this._CT_CauHoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CT_CauHoi.Entity = null;
						previousValue.CT_MaDes.Remove(this);
					}
					this._CT_CauHoi.Entity = value;
					if ((value != null))
					{
						value.CT_MaDes.Add(this);
						this._IDCauhoi = value.IDCauhoi;
						this._Khoicauhoi = value.Khoi;
						this._IDDapan = value.IDdapan;
					}
					else
					{
						this._IDCauhoi = default(int);
						this._Khoicauhoi = default(int);
						this._IDDapan = default(string);
					}
					this.SendPropertyChanged("CT_CauHoi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaDe_CT_MaDe", Storage="_MaDe", ThisKey="IDMade,Khoimade", OtherKey="ID,Khoi", IsForeignKey=true)]
		public MaDe MaDe
		{
			get
			{
				return this._MaDe.Entity;
			}
			set
			{
				MaDe previousValue = this._MaDe.Entity;
				if (((previousValue != value) 
							|| (this._MaDe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MaDe.Entity = null;
						previousValue.CT_MaDes.Remove(this);
					}
					this._MaDe.Entity = value;
					if ((value != null))
					{
						value.CT_MaDes.Add(this);
						this._IDMade = value.ID;
						this._Khoimade = value.Khoi;
					}
					else
					{
						this._IDMade = default(int);
						this._Khoimade = default(int);
					}
					this.SendPropertyChanged("MaDe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_OnLuyen")]
	public partial class CT_OnLuyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Solan;
		
		private int _IDHocsinh;
		
		private int _Lop;
		
		private int _Khoi;
		
		private int _Made;
		
		private int _Khoimade;
		
		private int _IDCauhoi;
		
		private int _IDKhoicauhoi;
		
		private string _IDDapan;
		
		private System.Nullable<bool> _Traloi;
		
		private string _Motacauhoi;
		
		private string _Motadapan;
		
		private EntityRef<CT_CauHoi> _CT_CauHoi;
		
		private EntityRef<OnLuyen> _OnLuyen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSolanChanging(int value);
    partial void OnSolanChanged();
    partial void OnIDHocsinhChanging(int value);
    partial void OnIDHocsinhChanged();
    partial void OnLopChanging(int value);
    partial void OnLopChanged();
    partial void OnKhoiChanging(int value);
    partial void OnKhoiChanged();
    partial void OnMadeChanging(int value);
    partial void OnMadeChanged();
    partial void OnKhoimadeChanging(int value);
    partial void OnKhoimadeChanged();
    partial void OnIDCauhoiChanging(int value);
    partial void OnIDCauhoiChanged();
    partial void OnIDKhoicauhoiChanging(int value);
    partial void OnIDKhoicauhoiChanged();
    partial void OnIDDapanChanging(string value);
    partial void OnIDDapanChanged();
    partial void OnTraloiChanging(System.Nullable<bool> value);
    partial void OnTraloiChanged();
    partial void OnMotacauhoiChanging(string value);
    partial void OnMotacauhoiChanged();
    partial void OnMotadapanChanging(string value);
    partial void OnMotadapanChanged();
    #endregion
		
		public CT_OnLuyen()
		{
			this._CT_CauHoi = default(EntityRef<CT_CauHoi>);
			this._OnLuyen = default(EntityRef<OnLuyen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Solan", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Solan
		{
			get
			{
				return this._Solan;
			}
			set
			{
				if ((this._Solan != value))
				{
					if (this._OnLuyen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSolanChanging(value);
					this.SendPropertyChanging();
					this._Solan = value;
					this.SendPropertyChanged("Solan");
					this.OnSolanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHocsinh", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDHocsinh
		{
			get
			{
				return this._IDHocsinh;
			}
			set
			{
				if ((this._IDHocsinh != value))
				{
					if (this._OnLuyen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDHocsinhChanging(value);
					this.SendPropertyChanging();
					this._IDHocsinh = value;
					this.SendPropertyChanged("IDHocsinh");
					this.OnIDHocsinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Lop
		{
			get
			{
				return this._Lop;
			}
			set
			{
				if ((this._Lop != value))
				{
					if (this._OnLuyen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLopChanging(value);
					this.SendPropertyChanging();
					this._Lop = value;
					this.SendPropertyChanged("Lop");
					this.OnLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Khoi
		{
			get
			{
				return this._Khoi;
			}
			set
			{
				if ((this._Khoi != value))
				{
					if (this._OnLuyen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhoiChanging(value);
					this.SendPropertyChanging();
					this._Khoi = value;
					this.SendPropertyChanged("Khoi");
					this.OnKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Made", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Made
		{
			get
			{
				return this._Made;
			}
			set
			{
				if ((this._Made != value))
				{
					if (this._OnLuyen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMadeChanging(value);
					this.SendPropertyChanging();
					this._Made = value;
					this.SendPropertyChanged("Made");
					this.OnMadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoimade", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Khoimade
		{
			get
			{
				return this._Khoimade;
			}
			set
			{
				if ((this._Khoimade != value))
				{
					if (this._OnLuyen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhoimadeChanging(value);
					this.SendPropertyChanging();
					this._Khoimade = value;
					this.SendPropertyChanged("Khoimade");
					this.OnKhoimadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCauhoi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDCauhoi
		{
			get
			{
				return this._IDCauhoi;
			}
			set
			{
				if ((this._IDCauhoi != value))
				{
					if (this._CT_CauHoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCauhoiChanging(value);
					this.SendPropertyChanging();
					this._IDCauhoi = value;
					this.SendPropertyChanged("IDCauhoi");
					this.OnIDCauhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKhoicauhoi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDKhoicauhoi
		{
			get
			{
				return this._IDKhoicauhoi;
			}
			set
			{
				if ((this._IDKhoicauhoi != value))
				{
					if (this._CT_CauHoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKhoicauhoiChanging(value);
					this.SendPropertyChanging();
					this._IDKhoicauhoi = value;
					this.SendPropertyChanged("IDKhoicauhoi");
					this.OnIDKhoicauhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDapan", DbType="NChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDDapan
		{
			get
			{
				return this._IDDapan;
			}
			set
			{
				if ((this._IDDapan != value))
				{
					if (this._CT_CauHoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDapanChanging(value);
					this.SendPropertyChanging();
					this._IDDapan = value;
					this.SendPropertyChanged("IDDapan");
					this.OnIDDapanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Traloi", DbType="Bit")]
		public System.Nullable<bool> Traloi
		{
			get
			{
				return this._Traloi;
			}
			set
			{
				if ((this._Traloi != value))
				{
					this.OnTraloiChanging(value);
					this.SendPropertyChanging();
					this._Traloi = value;
					this.SendPropertyChanged("Traloi");
					this.OnTraloiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Motacauhoi", DbType="NVarChar(255)")]
		public string Motacauhoi
		{
			get
			{
				return this._Motacauhoi;
			}
			set
			{
				if ((this._Motacauhoi != value))
				{
					this.OnMotacauhoiChanging(value);
					this.SendPropertyChanging();
					this._Motacauhoi = value;
					this.SendPropertyChanged("Motacauhoi");
					this.OnMotacauhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Motadapan", DbType="NVarChar(255)")]
		public string Motadapan
		{
			get
			{
				return this._Motadapan;
			}
			set
			{
				if ((this._Motadapan != value))
				{
					this.OnMotadapanChanging(value);
					this.SendPropertyChanging();
					this._Motadapan = value;
					this.SendPropertyChanged("Motadapan");
					this.OnMotadapanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CT_CauHoi_CT_OnLuyen", Storage="_CT_CauHoi", ThisKey="IDCauhoi,IDKhoicauhoi,IDDapan", OtherKey="IDCauhoi,Khoi,IDdapan", IsForeignKey=true)]
		public CT_CauHoi CT_CauHoi
		{
			get
			{
				return this._CT_CauHoi.Entity;
			}
			set
			{
				CT_CauHoi previousValue = this._CT_CauHoi.Entity;
				if (((previousValue != value) 
							|| (this._CT_CauHoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CT_CauHoi.Entity = null;
						previousValue.CT_OnLuyens.Remove(this);
					}
					this._CT_CauHoi.Entity = value;
					if ((value != null))
					{
						value.CT_OnLuyens.Add(this);
						this._IDCauhoi = value.IDCauhoi;
						this._IDKhoicauhoi = value.Khoi;
						this._IDDapan = value.IDdapan;
					}
					else
					{
						this._IDCauhoi = default(int);
						this._IDKhoicauhoi = default(int);
						this._IDDapan = default(string);
					}
					this.SendPropertyChanged("CT_CauHoi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OnLuyen_CT_OnLuyen", Storage="_OnLuyen", ThisKey="Solan,IDHocsinh,Lop,Khoi,Made,Khoimade", OtherKey="Solan,IDHocsinh,Lop,Khoi,Made,Khoimade", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public OnLuyen OnLuyen
		{
			get
			{
				return this._OnLuyen.Entity;
			}
			set
			{
				OnLuyen previousValue = this._OnLuyen.Entity;
				if (((previousValue != value) 
							|| (this._OnLuyen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OnLuyen.Entity = null;
						previousValue.CT_OnLuyens.Remove(this);
					}
					this._OnLuyen.Entity = value;
					if ((value != null))
					{
						value.CT_OnLuyens.Add(this);
						this._Solan = value.Solan;
						this._IDHocsinh = value.IDHocsinh;
						this._Lop = value.Lop;
						this._Khoi = value.Khoi;
						this._Made = value.Made;
						this._Khoimade = value.Khoimade;
					}
					else
					{
						this._Solan = default(int);
						this._IDHocsinh = default(int);
						this._Lop = default(int);
						this._Khoi = default(int);
						this._Made = default(int);
						this._Khoimade = default(int);
					}
					this.SendPropertyChanged("OnLuyen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_ThamGia")]
	public partial class CT_ThamGia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDKythi;
		
		private int _Khoikythi;
		
		private int _IDMade;
		
		private int _Khoidethi;
		
		private int _IDHocsinh;
		
		private int _Lop;
		
		private int _Khoi;
		
		private System.Nullable<float> _Diem;
		
		private EntitySet<CT_KetQua> _CT_KetQuas;
		
		private EntityRef<CT_KyThi> _CT_KyThi;
		
		private EntityRef<HocSinh> _HocSinh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDKythiChanging(int value);
    partial void OnIDKythiChanged();
    partial void OnKhoikythiChanging(int value);
    partial void OnKhoikythiChanged();
    partial void OnIDMadeChanging(int value);
    partial void OnIDMadeChanged();
    partial void OnKhoidethiChanging(int value);
    partial void OnKhoidethiChanged();
    partial void OnIDHocsinhChanging(int value);
    partial void OnIDHocsinhChanged();
    partial void OnLopChanging(int value);
    partial void OnLopChanged();
    partial void OnKhoiChanging(int value);
    partial void OnKhoiChanged();
    partial void OnDiemChanging(System.Nullable<float> value);
    partial void OnDiemChanged();
    #endregion
		
		public CT_ThamGia()
		{
			this._CT_KetQuas = new EntitySet<CT_KetQua>(new Action<CT_KetQua>(this.attach_CT_KetQuas), new Action<CT_KetQua>(this.detach_CT_KetQuas));
			this._CT_KyThi = default(EntityRef<CT_KyThi>);
			this._HocSinh = default(EntityRef<HocSinh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKythi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDKythi
		{
			get
			{
				return this._IDKythi;
			}
			set
			{
				if ((this._IDKythi != value))
				{
					if (this._CT_KyThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKythiChanging(value);
					this.SendPropertyChanging();
					this._IDKythi = value;
					this.SendPropertyChanged("IDKythi");
					this.OnIDKythiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoikythi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Khoikythi
		{
			get
			{
				return this._Khoikythi;
			}
			set
			{
				if ((this._Khoikythi != value))
				{
					if (this._CT_KyThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhoikythiChanging(value);
					this.SendPropertyChanging();
					this._Khoikythi = value;
					this.SendPropertyChanged("Khoikythi");
					this.OnKhoikythiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMade", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDMade
		{
			get
			{
				return this._IDMade;
			}
			set
			{
				if ((this._IDMade != value))
				{
					if (this._CT_KyThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMadeChanging(value);
					this.SendPropertyChanging();
					this._IDMade = value;
					this.SendPropertyChanged("IDMade");
					this.OnIDMadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoidethi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Khoidethi
		{
			get
			{
				return this._Khoidethi;
			}
			set
			{
				if ((this._Khoidethi != value))
				{
					if (this._CT_KyThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhoidethiChanging(value);
					this.SendPropertyChanging();
					this._Khoidethi = value;
					this.SendPropertyChanged("Khoidethi");
					this.OnKhoidethiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHocsinh", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDHocsinh
		{
			get
			{
				return this._IDHocsinh;
			}
			set
			{
				if ((this._IDHocsinh != value))
				{
					if (this._HocSinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDHocsinhChanging(value);
					this.SendPropertyChanging();
					this._IDHocsinh = value;
					this.SendPropertyChanged("IDHocsinh");
					this.OnIDHocsinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Lop
		{
			get
			{
				return this._Lop;
			}
			set
			{
				if ((this._Lop != value))
				{
					if (this._HocSinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLopChanging(value);
					this.SendPropertyChanging();
					this._Lop = value;
					this.SendPropertyChanged("Lop");
					this.OnLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Khoi
		{
			get
			{
				return this._Khoi;
			}
			set
			{
				if ((this._Khoi != value))
				{
					if (this._HocSinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhoiChanging(value);
					this.SendPropertyChanging();
					this._Khoi = value;
					this.SendPropertyChanged("Khoi");
					this.OnKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diem", DbType="Real")]
		public System.Nullable<float> Diem
		{
			get
			{
				return this._Diem;
			}
			set
			{
				if ((this._Diem != value))
				{
					this.OnDiemChanging(value);
					this.SendPropertyChanging();
					this._Diem = value;
					this.SendPropertyChanged("Diem");
					this.OnDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CT_ThamGia_CT_KetQua", Storage="_CT_KetQuas", ThisKey="IDKythi,Khoikythi,IDMade,Khoidethi,IDHocsinh,Lop,Khoi", OtherKey="IDKythi,Khoikythi,IDMade,Khoidethi,IDHocsinh,Lop,Khoi")]
		public EntitySet<CT_KetQua> CT_KetQuas
		{
			get
			{
				return this._CT_KetQuas;
			}
			set
			{
				this._CT_KetQuas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CT_KyThi_CT_ThamGia", Storage="_CT_KyThi", ThisKey="IDKythi,Khoikythi,IDMade,Khoidethi", OtherKey="IDKythi,Khoikythi,IDMade,Khoidethi", IsForeignKey=true)]
		public CT_KyThi CT_KyThi
		{
			get
			{
				return this._CT_KyThi.Entity;
			}
			set
			{
				CT_KyThi previousValue = this._CT_KyThi.Entity;
				if (((previousValue != value) 
							|| (this._CT_KyThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CT_KyThi.Entity = null;
						previousValue.CT_ThamGias.Remove(this);
					}
					this._CT_KyThi.Entity = value;
					if ((value != null))
					{
						value.CT_ThamGias.Add(this);
						this._IDKythi = value.IDKythi;
						this._Khoikythi = value.Khoikythi;
						this._IDMade = value.IDMade;
						this._Khoidethi = value.Khoidethi;
					}
					else
					{
						this._IDKythi = default(int);
						this._Khoikythi = default(int);
						this._IDMade = default(int);
						this._Khoidethi = default(int);
					}
					this.SendPropertyChanged("CT_KyThi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_CT_ThamGia", Storage="_HocSinh", ThisKey="IDHocsinh,Lop,Khoi", OtherKey="ID,Lop,Khoi", IsForeignKey=true)]
		public HocSinh HocSinh
		{
			get
			{
				return this._HocSinh.Entity;
			}
			set
			{
				HocSinh previousValue = this._HocSinh.Entity;
				if (((previousValue != value) 
							|| (this._HocSinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocSinh.Entity = null;
						previousValue.CT_ThamGias.Remove(this);
					}
					this._HocSinh.Entity = value;
					if ((value != null))
					{
						value.CT_ThamGias.Add(this);
						this._IDHocsinh = value.ID;
						this._Lop = value.Lop;
						this._Khoi = value.Khoi;
					}
					else
					{
						this._IDHocsinh = default(int);
						this._Lop = default(int);
						this._Khoi = default(int);
					}
					this.SendPropertyChanged("HocSinh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_KetQuas(CT_KetQua entity)
		{
			this.SendPropertyChanging();
			entity.CT_ThamGia = this;
		}
		
		private void detach_CT_KetQuas(CT_KetQua entity)
		{
			this.SendPropertyChanging();
			entity.CT_ThamGia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiaoVien")]
	public partial class GiaoVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Hoten;
		
		private System.Nullable<System.DateTime> _Ngaysinh;
		
		private EntitySet<KyThi> _KyThis;
		
		private EntitySet<MaDe> _MaDes;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnHotenChanging(string value);
    partial void OnHotenChanged();
    partial void OnNgaysinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaysinhChanged();
    #endregion
		
		public GiaoVien()
		{
			this._KyThis = new EntitySet<KyThi>(new Action<KyThi>(this.attach_KyThis), new Action<KyThi>(this.detach_KyThis));
			this._MaDes = new EntitySet<MaDe>(new Action<MaDe>(this.attach_MaDes), new Action<MaDe>(this.detach_MaDes));
			this._NguoiDung = default(EntityRef<NguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hoten", DbType="NVarChar(50)")]
		public string Hoten
		{
			get
			{
				return this._Hoten;
			}
			set
			{
				if ((this._Hoten != value))
				{
					this.OnHotenChanging(value);
					this.SendPropertyChanging();
					this._Hoten = value;
					this.SendPropertyChanged("Hoten");
					this.OnHotenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaysinh", DbType="Date")]
		public System.Nullable<System.DateTime> Ngaysinh
		{
			get
			{
				return this._Ngaysinh;
			}
			set
			{
				if ((this._Ngaysinh != value))
				{
					this.OnNgaysinhChanging(value);
					this.SendPropertyChanging();
					this._Ngaysinh = value;
					this.SendPropertyChanged("Ngaysinh");
					this.OnNgaysinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_KyThi", Storage="_KyThis", ThisKey="ID", OtherKey="IDNguoitao")]
		public EntitySet<KyThi> KyThis
		{
			get
			{
				return this._KyThis;
			}
			set
			{
				this._KyThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_MaDe", Storage="_MaDes", ThisKey="ID", OtherKey="IDNguoitao")]
		public EntitySet<MaDe> MaDes
		{
			get
			{
				return this._MaDes;
			}
			set
			{
				this._MaDes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_GiaoVien", Storage="_NguoiDung", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.GiaoVien = null;
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.GiaoVien = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KyThis(KyThi entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = this;
		}
		
		private void detach_KyThis(KyThi entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = null;
		}
		
		private void attach_MaDes(MaDe entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = this;
		}
		
		private void detach_MaDes(MaDe entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocSinh")]
	public partial class HocSinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Lop;
		
		private int _Khoi;
		
		private string _Hoten;
		
		private System.Nullable<System.DateTime> _Ngaysinh;
		
		private EntitySet<CT_ThamGia> _CT_ThamGias;
		
		private EntitySet<OnLuyen> _OnLuyens;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLopChanging(int value);
    partial void OnLopChanged();
    partial void OnKhoiChanging(int value);
    partial void OnKhoiChanged();
    partial void OnHotenChanging(string value);
    partial void OnHotenChanged();
    partial void OnNgaysinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaysinhChanged();
    #endregion
		
		public HocSinh()
		{
			this._CT_ThamGias = new EntitySet<CT_ThamGia>(new Action<CT_ThamGia>(this.attach_CT_ThamGias), new Action<CT_ThamGia>(this.detach_CT_ThamGias));
			this._OnLuyens = new EntitySet<OnLuyen>(new Action<OnLuyen>(this.attach_OnLuyens), new Action<OnLuyen>(this.detach_OnLuyens));
			this._NguoiDung = default(EntityRef<NguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Lop
		{
			get
			{
				return this._Lop;
			}
			set
			{
				if ((this._Lop != value))
				{
					this.OnLopChanging(value);
					this.SendPropertyChanging();
					this._Lop = value;
					this.SendPropertyChanged("Lop");
					this.OnLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Khoi
		{
			get
			{
				return this._Khoi;
			}
			set
			{
				if ((this._Khoi != value))
				{
					this.OnKhoiChanging(value);
					this.SendPropertyChanging();
					this._Khoi = value;
					this.SendPropertyChanged("Khoi");
					this.OnKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hoten", DbType="NVarChar(50)")]
		public string Hoten
		{
			get
			{
				return this._Hoten;
			}
			set
			{
				if ((this._Hoten != value))
				{
					this.OnHotenChanging(value);
					this.SendPropertyChanging();
					this._Hoten = value;
					this.SendPropertyChanged("Hoten");
					this.OnHotenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaysinh", DbType="Date")]
		public System.Nullable<System.DateTime> Ngaysinh
		{
			get
			{
				return this._Ngaysinh;
			}
			set
			{
				if ((this._Ngaysinh != value))
				{
					this.OnNgaysinhChanging(value);
					this.SendPropertyChanging();
					this._Ngaysinh = value;
					this.SendPropertyChanged("Ngaysinh");
					this.OnNgaysinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_CT_ThamGia", Storage="_CT_ThamGias", ThisKey="ID,Lop,Khoi", OtherKey="IDHocsinh,Lop,Khoi")]
		public EntitySet<CT_ThamGia> CT_ThamGias
		{
			get
			{
				return this._CT_ThamGias;
			}
			set
			{
				this._CT_ThamGias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_OnLuyen", Storage="_OnLuyens", ThisKey="ID,Lop,Khoi", OtherKey="IDHocsinh,Lop,Khoi")]
		public EntitySet<OnLuyen> OnLuyens
		{
			get
			{
				return this._OnLuyens;
			}
			set
			{
				this._OnLuyens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_HocSinh", Storage="_NguoiDung", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.HocSinhs.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.HocSinhs.Add(this);
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_ThamGias(CT_ThamGia entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = this;
		}
		
		private void detach_CT_ThamGias(CT_ThamGia entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = null;
		}
		
		private void attach_OnLuyens(OnLuyen entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = this;
		}
		
		private void detach_OnLuyens(OnLuyen entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KyThi")]
	public partial class KyThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Khoi;
		
		private int _Thithu;
		
		private int _IDNguoitao;
		
		private int _Gioihanthoigian;
		
		private System.Nullable<System.DateTime> _Ngaytao;
		
		private System.Nullable<System.DateTime> _Ngaythi;
		
		private EntitySet<CT_KyThi> _CT_KyThis;
		
		private EntityRef<GiaoVien> _GiaoVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnKhoiChanging(int value);
    partial void OnKhoiChanged();
    partial void OnThithuChanging(int value);
    partial void OnThithuChanged();
    partial void OnIDNguoitaoChanging(int value);
    partial void OnIDNguoitaoChanged();
    partial void OnGioihanthoigianChanging(int value);
    partial void OnGioihanthoigianChanged();
    partial void OnNgaytaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaytaoChanged();
    partial void OnNgaythiChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaythiChanged();
    #endregion
		
		public KyThi()
		{
			this._CT_KyThis = new EntitySet<CT_KyThi>(new Action<CT_KyThi>(this.attach_CT_KyThis), new Action<CT_KyThi>(this.detach_CT_KyThis));
			this._GiaoVien = default(EntityRef<GiaoVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Khoi
		{
			get
			{
				return this._Khoi;
			}
			set
			{
				if ((this._Khoi != value))
				{
					this.OnKhoiChanging(value);
					this.SendPropertyChanging();
					this._Khoi = value;
					this.SendPropertyChanged("Khoi");
					this.OnKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thithu", DbType="Int NOT NULL")]
		public int Thithu
		{
			get
			{
				return this._Thithu;
			}
			set
			{
				if ((this._Thithu != value))
				{
					this.OnThithuChanging(value);
					this.SendPropertyChanging();
					this._Thithu = value;
					this.SendPropertyChanged("Thithu");
					this.OnThithuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNguoitao", DbType="Int NOT NULL")]
		public int IDNguoitao
		{
			get
			{
				return this._IDNguoitao;
			}
			set
			{
				if ((this._IDNguoitao != value))
				{
					if (this._GiaoVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDNguoitaoChanging(value);
					this.SendPropertyChanging();
					this._IDNguoitao = value;
					this.SendPropertyChanged("IDNguoitao");
					this.OnIDNguoitaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gioihanthoigian", DbType="Int NOT NULL")]
		public int Gioihanthoigian
		{
			get
			{
				return this._Gioihanthoigian;
			}
			set
			{
				if ((this._Gioihanthoigian != value))
				{
					this.OnGioihanthoigianChanging(value);
					this.SendPropertyChanging();
					this._Gioihanthoigian = value;
					this.SendPropertyChanged("Gioihanthoigian");
					this.OnGioihanthoigianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaytao", DbType="Date")]
		public System.Nullable<System.DateTime> Ngaytao
		{
			get
			{
				return this._Ngaytao;
			}
			set
			{
				if ((this._Ngaytao != value))
				{
					this.OnNgaytaoChanging(value);
					this.SendPropertyChanging();
					this._Ngaytao = value;
					this.SendPropertyChanged("Ngaytao");
					this.OnNgaytaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaythi", DbType="Date")]
		public System.Nullable<System.DateTime> Ngaythi
		{
			get
			{
				return this._Ngaythi;
			}
			set
			{
				if ((this._Ngaythi != value))
				{
					this.OnNgaythiChanging(value);
					this.SendPropertyChanging();
					this._Ngaythi = value;
					this.SendPropertyChanged("Ngaythi");
					this.OnNgaythiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KyThi_CT_KyThi", Storage="_CT_KyThis", ThisKey="ID,Khoi", OtherKey="IDKythi,Khoikythi")]
		public EntitySet<CT_KyThi> CT_KyThis
		{
			get
			{
				return this._CT_KyThis;
			}
			set
			{
				this._CT_KyThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_KyThi", Storage="_GiaoVien", ThisKey="IDNguoitao", OtherKey="ID", IsForeignKey=true)]
		public GiaoVien GiaoVien
		{
			get
			{
				return this._GiaoVien.Entity;
			}
			set
			{
				GiaoVien previousValue = this._GiaoVien.Entity;
				if (((previousValue != value) 
							|| (this._GiaoVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiaoVien.Entity = null;
						previousValue.KyThis.Remove(this);
					}
					this._GiaoVien.Entity = value;
					if ((value != null))
					{
						value.KyThis.Add(this);
						this._IDNguoitao = value.ID;
					}
					else
					{
						this._IDNguoitao = default(int);
					}
					this.SendPropertyChanged("GiaoVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_KyThis(CT_KyThi entity)
		{
			this.SendPropertyChanging();
			entity.KyThi = this;
		}
		
		private void detach_CT_KyThis(CT_KyThi entity)
		{
			this.SendPropertyChanging();
			entity.KyThi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MaDe")]
	public partial class MaDe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Khoi;
		
		private int _IDNguoitao;
		
		private string _Dokho;
		
		private EntitySet<CT_KyThi> _CT_KyThis;
		
		private EntitySet<CT_MaDe> _CT_MaDes;
		
		private EntitySet<OnLuyen> _OnLuyens;
		
		private EntityRef<GiaoVien> _GiaoVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnKhoiChanging(int value);
    partial void OnKhoiChanged();
    partial void OnIDNguoitaoChanging(int value);
    partial void OnIDNguoitaoChanged();
    partial void OnDokhoChanging(string value);
    partial void OnDokhoChanged();
    #endregion
		
		public MaDe()
		{
			this._CT_KyThis = new EntitySet<CT_KyThi>(new Action<CT_KyThi>(this.attach_CT_KyThis), new Action<CT_KyThi>(this.detach_CT_KyThis));
			this._CT_MaDes = new EntitySet<CT_MaDe>(new Action<CT_MaDe>(this.attach_CT_MaDes), new Action<CT_MaDe>(this.detach_CT_MaDes));
			this._OnLuyens = new EntitySet<OnLuyen>(new Action<OnLuyen>(this.attach_OnLuyens), new Action<OnLuyen>(this.detach_OnLuyens));
			this._GiaoVien = default(EntityRef<GiaoVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Khoi
		{
			get
			{
				return this._Khoi;
			}
			set
			{
				if ((this._Khoi != value))
				{
					this.OnKhoiChanging(value);
					this.SendPropertyChanging();
					this._Khoi = value;
					this.SendPropertyChanged("Khoi");
					this.OnKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNguoitao", DbType="Int NOT NULL")]
		public int IDNguoitao
		{
			get
			{
				return this._IDNguoitao;
			}
			set
			{
				if ((this._IDNguoitao != value))
				{
					if (this._GiaoVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDNguoitaoChanging(value);
					this.SendPropertyChanging();
					this._IDNguoitao = value;
					this.SendPropertyChanged("IDNguoitao");
					this.OnIDNguoitaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dokho", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Dokho
		{
			get
			{
				return this._Dokho;
			}
			set
			{
				if ((this._Dokho != value))
				{
					this.OnDokhoChanging(value);
					this.SendPropertyChanging();
					this._Dokho = value;
					this.SendPropertyChanged("Dokho");
					this.OnDokhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaDe_CT_KyThi", Storage="_CT_KyThis", ThisKey="ID,Khoi", OtherKey="IDMade,Khoidethi")]
		public EntitySet<CT_KyThi> CT_KyThis
		{
			get
			{
				return this._CT_KyThis;
			}
			set
			{
				this._CT_KyThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaDe_CT_MaDe", Storage="_CT_MaDes", ThisKey="ID,Khoi", OtherKey="IDMade,Khoimade")]
		public EntitySet<CT_MaDe> CT_MaDes
		{
			get
			{
				return this._CT_MaDes;
			}
			set
			{
				this._CT_MaDes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaDe_OnLuyen", Storage="_OnLuyens", ThisKey="ID,Khoi", OtherKey="Made,Khoimade")]
		public EntitySet<OnLuyen> OnLuyens
		{
			get
			{
				return this._OnLuyens;
			}
			set
			{
				this._OnLuyens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_MaDe", Storage="_GiaoVien", ThisKey="IDNguoitao", OtherKey="ID", IsForeignKey=true)]
		public GiaoVien GiaoVien
		{
			get
			{
				return this._GiaoVien.Entity;
			}
			set
			{
				GiaoVien previousValue = this._GiaoVien.Entity;
				if (((previousValue != value) 
							|| (this._GiaoVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiaoVien.Entity = null;
						previousValue.MaDes.Remove(this);
					}
					this._GiaoVien.Entity = value;
					if ((value != null))
					{
						value.MaDes.Add(this);
						this._IDNguoitao = value.ID;
					}
					else
					{
						this._IDNguoitao = default(int);
					}
					this.SendPropertyChanged("GiaoVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_KyThis(CT_KyThi entity)
		{
			this.SendPropertyChanging();
			entity.MaDe = this;
		}
		
		private void detach_CT_KyThis(CT_KyThi entity)
		{
			this.SendPropertyChanging();
			entity.MaDe = null;
		}
		
		private void attach_CT_MaDes(CT_MaDe entity)
		{
			this.SendPropertyChanging();
			entity.MaDe = this;
		}
		
		private void detach_CT_MaDes(CT_MaDe entity)
		{
			this.SendPropertyChanging();
			entity.MaDe = null;
		}
		
		private void attach_OnLuyens(OnLuyen entity)
		{
			this.SendPropertyChanging();
			entity.MaDe1 = this;
		}
		
		private void detach_OnLuyens(OnLuyen entity)
		{
			this.SendPropertyChanging();
			entity.MaDe1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NguoiDung")]
	public partial class NguoiDung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CMND;
		
		private int _Loainguoidung;
		
		private string _TaiKhoan;
		
		private string _Matkhau;
		
		private EntitySet<CauHoi> _CauHois;
		
		private EntityRef<QuanTri> _QuanTri;
		
		private EntityRef<GiaoVien> _GiaoVien;
		
		private EntitySet<HocSinh> _HocSinhs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnLoainguoidungChanging(int value);
    partial void OnLoainguoidungChanged();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    partial void OnMatkhauChanging(string value);
    partial void OnMatkhauChanged();
    #endregion
		
		public NguoiDung()
		{
			this._CauHois = new EntitySet<CauHoi>(new Action<CauHoi>(this.attach_CauHois), new Action<CauHoi>(this.detach_CauHois));
			this._QuanTri = default(EntityRef<QuanTri>);
			this._GiaoVien = default(EntityRef<GiaoVien>);
			this._HocSinhs = new EntitySet<HocSinh>(new Action<HocSinh>(this.attach_HocSinhs), new Action<HocSinh>(this.detach_HocSinhs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loainguoidung", DbType="Int NOT NULL")]
		public int Loainguoidung
		{
			get
			{
				return this._Loainguoidung;
			}
			set
			{
				if ((this._Loainguoidung != value))
				{
					this.OnLoainguoidungChanging(value);
					this.SendPropertyChanging();
					this._Loainguoidung = value;
					this.SendPropertyChanged("Loainguoidung");
					this.OnLoainguoidungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="VarChar(50)")]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Matkhau", DbType="VarChar(50)")]
		public string Matkhau
		{
			get
			{
				return this._Matkhau;
			}
			set
			{
				if ((this._Matkhau != value))
				{
					this.OnMatkhauChanging(value);
					this.SendPropertyChanging();
					this._Matkhau = value;
					this.SendPropertyChanged("Matkhau");
					this.OnMatkhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_CauHoi", Storage="_CauHois", ThisKey="ID", OtherKey="IDNguoitao")]
		public EntitySet<CauHoi> CauHois
		{
			get
			{
				return this._CauHois;
			}
			set
			{
				this._CauHois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_QuanTri", Storage="_QuanTri", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public QuanTri QuanTri
		{
			get
			{
				return this._QuanTri.Entity;
			}
			set
			{
				QuanTri previousValue = this._QuanTri.Entity;
				if (((previousValue != value) 
							|| (this._QuanTri.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuanTri.Entity = null;
						previousValue.NguoiDung = null;
					}
					this._QuanTri.Entity = value;
					if ((value != null))
					{
						value.NguoiDung = this;
					}
					this.SendPropertyChanged("QuanTri");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_GiaoVien", Storage="_GiaoVien", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public GiaoVien GiaoVien
		{
			get
			{
				return this._GiaoVien.Entity;
			}
			set
			{
				GiaoVien previousValue = this._GiaoVien.Entity;
				if (((previousValue != value) 
							|| (this._GiaoVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiaoVien.Entity = null;
						previousValue.NguoiDung = null;
					}
					this._GiaoVien.Entity = value;
					if ((value != null))
					{
						value.NguoiDung = this;
					}
					this.SendPropertyChanged("GiaoVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_HocSinh", Storage="_HocSinhs", ThisKey="ID", OtherKey="ID")]
		public EntitySet<HocSinh> HocSinhs
		{
			get
			{
				return this._HocSinhs;
			}
			set
			{
				this._HocSinhs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CauHois(CauHoi entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_CauHois(CauHoi entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
		
		private void attach_HocSinhs(HocSinh entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_HocSinhs(HocSinh entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OnLuyen")]
	public partial class OnLuyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Solan;
		
		private int _IDHocsinh;
		
		private int _Lop;
		
		private int _Khoi;
		
		private int _Made;
		
		private int _Khoimade;
		
		private System.DateTime _Ngaylam;
		
		private System.Nullable<float> _Diem;
		
		private System.Nullable<System.DateTime> _Xong;
		
		private EntitySet<CT_OnLuyen> _CT_OnLuyens;
		
		private EntityRef<HocSinh> _HocSinh;
		
		private EntityRef<MaDe> _MaDe1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSolanChanging(int value);
    partial void OnSolanChanged();
    partial void OnIDHocsinhChanging(int value);
    partial void OnIDHocsinhChanged();
    partial void OnLopChanging(int value);
    partial void OnLopChanged();
    partial void OnKhoiChanging(int value);
    partial void OnKhoiChanged();
    partial void OnMadeChanging(int value);
    partial void OnMadeChanged();
    partial void OnKhoimadeChanging(int value);
    partial void OnKhoimadeChanged();
    partial void OnNgaylamChanging(System.DateTime value);
    partial void OnNgaylamChanged();
    partial void OnDiemChanging(System.Nullable<float> value);
    partial void OnDiemChanged();
    partial void OnXongChanging(System.Nullable<System.DateTime> value);
    partial void OnXongChanged();
    #endregion
		
		public OnLuyen()
		{
			this._CT_OnLuyens = new EntitySet<CT_OnLuyen>(new Action<CT_OnLuyen>(this.attach_CT_OnLuyens), new Action<CT_OnLuyen>(this.detach_CT_OnLuyens));
			this._HocSinh = default(EntityRef<HocSinh>);
			this._MaDe1 = default(EntityRef<MaDe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Solan", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Solan
		{
			get
			{
				return this._Solan;
			}
			set
			{
				if ((this._Solan != value))
				{
					this.OnSolanChanging(value);
					this.SendPropertyChanging();
					this._Solan = value;
					this.SendPropertyChanged("Solan");
					this.OnSolanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHocsinh", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDHocsinh
		{
			get
			{
				return this._IDHocsinh;
			}
			set
			{
				if ((this._IDHocsinh != value))
				{
					if (this._HocSinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDHocsinhChanging(value);
					this.SendPropertyChanging();
					this._IDHocsinh = value;
					this.SendPropertyChanged("IDHocsinh");
					this.OnIDHocsinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Lop
		{
			get
			{
				return this._Lop;
			}
			set
			{
				if ((this._Lop != value))
				{
					if (this._HocSinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLopChanging(value);
					this.SendPropertyChanging();
					this._Lop = value;
					this.SendPropertyChanged("Lop");
					this.OnLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Khoi
		{
			get
			{
				return this._Khoi;
			}
			set
			{
				if ((this._Khoi != value))
				{
					if (this._HocSinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhoiChanging(value);
					this.SendPropertyChanging();
					this._Khoi = value;
					this.SendPropertyChanged("Khoi");
					this.OnKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Made", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Made
		{
			get
			{
				return this._Made;
			}
			set
			{
				if ((this._Made != value))
				{
					if (this._MaDe1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMadeChanging(value);
					this.SendPropertyChanging();
					this._Made = value;
					this.SendPropertyChanged("Made");
					this.OnMadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoimade", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Khoimade
		{
			get
			{
				return this._Khoimade;
			}
			set
			{
				if ((this._Khoimade != value))
				{
					if (this._MaDe1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhoimadeChanging(value);
					this.SendPropertyChanging();
					this._Khoimade = value;
					this.SendPropertyChanged("Khoimade");
					this.OnKhoimadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaylam", DbType="DateTime NOT NULL")]
		public System.DateTime Ngaylam
		{
			get
			{
				return this._Ngaylam;
			}
			set
			{
				if ((this._Ngaylam != value))
				{
					this.OnNgaylamChanging(value);
					this.SendPropertyChanging();
					this._Ngaylam = value;
					this.SendPropertyChanged("Ngaylam");
					this.OnNgaylamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diem", DbType="Real")]
		public System.Nullable<float> Diem
		{
			get
			{
				return this._Diem;
			}
			set
			{
				if ((this._Diem != value))
				{
					this.OnDiemChanging(value);
					this.SendPropertyChanging();
					this._Diem = value;
					this.SendPropertyChanged("Diem");
					this.OnDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Xong", DbType="DateTime")]
		public System.Nullable<System.DateTime> Xong
		{
			get
			{
				return this._Xong;
			}
			set
			{
				if ((this._Xong != value))
				{
					this.OnXongChanging(value);
					this.SendPropertyChanging();
					this._Xong = value;
					this.SendPropertyChanged("Xong");
					this.OnXongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OnLuyen_CT_OnLuyen", Storage="_CT_OnLuyens", ThisKey="Solan,IDHocsinh,Lop,Khoi,Made,Khoimade", OtherKey="Solan,IDHocsinh,Lop,Khoi,Made,Khoimade")]
		public EntitySet<CT_OnLuyen> CT_OnLuyens
		{
			get
			{
				return this._CT_OnLuyens;
			}
			set
			{
				this._CT_OnLuyens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_OnLuyen", Storage="_HocSinh", ThisKey="IDHocsinh,Lop,Khoi", OtherKey="ID,Lop,Khoi", IsForeignKey=true)]
		public HocSinh HocSinh
		{
			get
			{
				return this._HocSinh.Entity;
			}
			set
			{
				HocSinh previousValue = this._HocSinh.Entity;
				if (((previousValue != value) 
							|| (this._HocSinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocSinh.Entity = null;
						previousValue.OnLuyens.Remove(this);
					}
					this._HocSinh.Entity = value;
					if ((value != null))
					{
						value.OnLuyens.Add(this);
						this._IDHocsinh = value.ID;
						this._Lop = value.Lop;
						this._Khoi = value.Khoi;
					}
					else
					{
						this._IDHocsinh = default(int);
						this._Lop = default(int);
						this._Khoi = default(int);
					}
					this.SendPropertyChanged("HocSinh");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaDe_OnLuyen", Storage="_MaDe1", ThisKey="Made,Khoimade", OtherKey="ID,Khoi", IsForeignKey=true)]
		public MaDe MaDe1
		{
			get
			{
				return this._MaDe1.Entity;
			}
			set
			{
				MaDe previousValue = this._MaDe1.Entity;
				if (((previousValue != value) 
							|| (this._MaDe1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MaDe1.Entity = null;
						previousValue.OnLuyens.Remove(this);
					}
					this._MaDe1.Entity = value;
					if ((value != null))
					{
						value.OnLuyens.Add(this);
						this._Made = value.ID;
						this._Khoimade = value.Khoi;
					}
					else
					{
						this._Made = default(int);
						this._Khoimade = default(int);
					}
					this.SendPropertyChanged("MaDe1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_OnLuyens(CT_OnLuyen entity)
		{
			this.SendPropertyChanging();
			entity.OnLuyen = this;
		}
		
		private void detach_CT_OnLuyens(CT_OnLuyen entity)
		{
			this.SendPropertyChanging();
			entity.OnLuyen = null;
		}
	}
}
#pragma warning restore 1591
